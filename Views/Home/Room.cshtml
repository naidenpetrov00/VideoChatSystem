@model VideoChatSystem.Models.RoomInputModel

<div id="video-grid">
</div>

<script>
	const roomId = "@Model.RoomId";
	let userId = null;
	let localStream = null;

	const connection = new signalR
		.HubConnectionBuilder()
		.withUrl("/meeting")
		.build();


	const myPeer = new Peer();
	myPeer.on('open', id => {
		userId = id;

		const startSignalR = async () => {

			await connection.start();
			await connection.invoke("JoinRoom", "roomId", "10");
		}
		startSignalR();
	})

	const videoGrid = document.querySelector('#video-grid')
	const myVideo = document.createElement('video');
	myVideo.muted = true;

	navigator.mediaDevices.getUserMedia({
		audio: true,
		video: true
	}).then(stream => {
		addVideoStream(myVideo, stream);
		localStream = stream;
	})

	const addVideoStream = (video, stream) => {
		video.srcObject = stream;
		video.addEventListener('loadedmetadata', () => {
			video.play()
		})
		videoGrid.appendChild(video);
	}
</script>